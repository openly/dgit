// Generated by CoffeeScript 1.7.1
var DBInterface, exec;

exec = require('../util/exec');

DBInterface = (function() {
  function DBInterface(config, dir) {
    this._errors = [];
    this.config = config;
    this.dir = dir;
  }

  DBInterface.prototype.pull = function(env, callback) {
    if (env == null) {
      env = 'local';
    }
    return this.exec("cd " + this.dir, (function(_this) {
      return function(e) {
        return _this.exec("rm -rf " + (_this._getFileName(env)), function(e) {
          return _this.doPull(env, callback);
        });
      };
    })(this));
  };

  DBInterface.prototype.push = function(env, callback) {
    if (env == null) {
      env = 'local';
    }
    return this.exec("cd " + this.dir, (function(_this) {
      return function(e) {
        return _this.doPush(env, callback);
      };
    })(this));
  };

  DBInterface.prototype.doPull = function(env, callback) {
    if (env == null) {
      env = 'local';
    }
    return console.log("Pull the database contents from " + env + "?");
  };

  DBInterface.prototype.doPush = function(env, callback) {
    if (env == null) {
      env = 'local';
    }
    return console.log("Push the database contents to " + env + "?");
  };

  DBInterface.prototype.exec = function(command, callback) {
    console.log("Execute the shell script command '" + command + "'");
    return exec(command, function(e, stdout, stderr) {
      console.log(stdout);
      return callback(e, stdout, stderr);
    });
  };

  DBInterface.prototype.getErrors = function() {
    return this._errors;
  };

  DBInterface.prototype._getFileName = function(env) {
    var fileName;
    fileName = this.config.type + '_dump_' + this.config['output'];
    return fileName;
  };

  return DBInterface;

})();

module.exports = DBInterface;
