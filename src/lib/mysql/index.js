// Generated by CoffeeScript 1.7.1
var DBInterface, MySqlInterface,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

DBInterface = require('../db_interface');

MySqlInterface = (function(_super) {
  __extends(MySqlInterface, _super);

  function MySqlInterface() {
    return MySqlInterface.__super__.constructor.apply(this, arguments);
  }

  MySqlInterface.prototype.pull = function(env) {
    var command, conn, e, envConfig;
    if (env == null) {
      env = 'local';
    }
    console.log("Pull the mysql contents from '" + env + "'");
    envConfig = this.config['env'][env];
    conn = envConfig.connection;
    try {
      command = "mysqldump -u " + conn.username + " -p" + conn.password + " --databases " + conn.database + " > " + envConfig.file_name + ".sql";
      return this.exec(command);
    } catch (_error) {
      e = _error;
      return this._errors.push(e);
    }
  };

  MySqlInterface.prototype.push = function(env) {
    var command, conn, e, envConfig;
    if (env == null) {
      env = 'local';
    }
    console.log("Push the mysql contents to '" + env + "'");
    envConfig = this.config['env'][env];
    conn = envConfig.connection;
    try {
      command = "mysql -u " + conn.username + " -p" + conn.password + " " + conn.database + " < " + envConfig.file_name + ".sql";
      return this.exec(command);
    } catch (_error) {
      e = _error;
      return this._errors.push(e);
    }
  };

  return MySqlInterface;

})(DBInterface);

module.exports = MySqlInterface;
