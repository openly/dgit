// Generated by CoffeeScript 1.7.1
var DBInterface, MongoInterface, path,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

DBInterface = require('../db_interface');

path = require('path');

MongoInterface = (function(_super) {
  __extends(MongoInterface, _super);

  function MongoInterface() {
    return MongoInterface.__super__.constructor.apply(this, arguments);
  }

  MongoInterface.prototype.doPull = function(env, callback) {
    var command, conn, fileName;
    if (env == null) {
      env = 'local';
    }
    console.log("Pull the mongo contents from '" + env + "'");
    conn = this.config['env'][env].connection;
    fileName = this._getFileName(env);
    command = "mongodump ";
    if (conn.host != null) {
      command += "--host " + conn.host + " ";
    }
    if (conn.port != null) {
      command += "--port " + conn.port + " ";
    }
    if (conn.username != null) {
      command += "--username " + conn.username + " ";
    }
    if (conn.password != null) {
      command += "--password " + conn.password + " ";
    }
    if (conn.dbpath != null) {
      command += "--dbpath " + conn.dbpath + " ";
    }
    command += "--db " + conn.database + " ";
    command += "--out " + fileName;
    return this.exec(command, (function(_this) {
      return function(e, stdout, stderr) {
        if (e != null) {
          _this._errors.push(e);
        }
        return callback(_this._errors);
      };
    })(this));
  };

  MongoInterface.prototype.doPush = function(env, callback) {
    var command, conn, fileName;
    if (env == null) {
      env = 'local';
    }
    console.log("Push the mongo contents to '" + env + "'");
    conn = this.config['env'][env].connection;
    fileName = this._getFileName(env);
    command = "mongorestore ";
    if (conn.host != null) {
      command += "--host " + conn.host + " ";
    }
    if (conn.port != null) {
      command += "--port " + conn.port + " ";
    }
    if (conn.username != null) {
      command += "--username " + conn.username + " ";
    }
    if (conn.password != null) {
      command += "--password " + conn.password + " ";
    }
    if (conn.dbpath != null) {
      command += "--dbpath " + conn.dbpath + " ";
    }
    command += "--db " + conn.database + " ";
    command += "" + fileName + "/*";
    return this.exec(command, (function(_this) {
      return function(e, stdout, stderr) {
        if (e != null) {
          _this._errors.push(e);
        }
        return callback(_this._errors);
      };
    })(this));
  };

  return MongoInterface;

})(DBInterface);

module.exports = MongoInterface;
